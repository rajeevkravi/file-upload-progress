{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction NgFileUploaderComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.buttonLabel);\n  }\n}\nfunction NgFileUploaderComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"a\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.browseLabel);\n  }\n}\nfunction NgFileUploaderComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const type_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r5, \", \");\n  }\n}\nfunction NgFileUploaderComponent_ul_10_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 12)(1, \"div\", 13);\n    i0.ɵɵelement(2, \"img\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15)(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 16);\n    i0.ɵɵtext(9, \"x\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const file_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", file_r7.uploadedUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(file_r7.data.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", file_r7.data.size / 1024, \" KB\");\n  }\n}\nfunction NgFileUploaderComponent_ul_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 10);\n    i0.ɵɵtemplate(1, NgFileUploaderComponent_ul_10_li_1_Template, 10, 3, \"li\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.uploadedList);\n  }\n}\nexport class NgFileUploaderComponent {\n  /**\n   * constructor to load all dependencies\n   */\n  constructor() {\n    /**\n       * label to show in the button\n       */\n    this.buttonLabel = 'Drop your image here, or ';\n    /**\n     * browse label\n     */\n    this.browseLabel = 'Browse';\n    /**\n     * supporting files\n     */\n    this.supportingFormats = ['JPG, JPEG', 'GIF', 'PDF'];\n    /**\n     * is multiple\n     */\n    this.isMultiple = true;\n    /**\n     * show thumbnails\n     */\n    this.showThumbnails = true;\n    /**\n     * uploaded list\n     */\n    this.uploadedList = [];\n    this.imageUrl = '';\n    this.imageName = '';\n  }\n  /**\n   * rea file\n   */\n  readURL(event) {\n    // const file = URL.createObjectURL(event.target.files[0]);\n    console.log(event.target.files);\n    for (let index = 0; index < event.target.files.length; index++) {\n      const file = event.target.files[index];\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = _event => {\n        this.uploadedList.push({\n          data: file,\n          state: 'in',\n          uploadedUrl: reader.result,\n          inProgress: false,\n          progress: 0,\n          canRetry: false,\n          canCancel: true\n        });\n      };\n      // if (event.target.files[0]) {\n      //   reader.readAsDataURL(event.target.files[0]);\n      //   reader.onload = (_event) => {\n      //     this.imageName = event.target.files[0].name;\n      //     console.log(event.target.files[0].size);\n      //     this.imageUrl = reader.result;\n      //   };\n      // }\n      // for (let index = 0; index < event.target.files.length; index++) {\n      //   const file = event.target.files[index];\n      //   this.uploadedList.push({\n      //     data: file,\n      //     state: 'in',\n      //     uploadedUrl: '',\n      //     inProgress: false,\n      //     progress: 0,\n      //     canRetry: false,\n      //     canCancel: true,\n      //   });\n      // }\n    }\n  }\n}\n\nNgFileUploaderComponent.ɵfac = function NgFileUploaderComponent_Factory(t) {\n  return new (t || NgFileUploaderComponent)();\n};\nNgFileUploaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NgFileUploaderComponent,\n  selectors: [[\"lib-ng-gil-uploader\"]],\n  inputs: {\n    buttonLabel: \"buttonLabel\",\n    browseLabel: \"browseLabel\",\n    supportingFormats: \"supportingFormats\",\n    isMultiple: \"isMultiple\",\n    showThumbnails: \"showThumbnails\"\n  },\n  decls: 11,\n  vars: 5,\n  consts: [[1, \"button-wrapper\"], [\"type\", \"file\", \"hidden\", \"\", \"accept\", \"image/*\", 3, \"multiple\", \"change\"], [\"file\", \"\"], [1, \"upload-button\", 3, \"click\"], [1, \"upload-label\"], [4, \"ngIf\"], [1, \"support-files-text\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"list-wrapper-list\", 4, \"ngIf\"], [1, \"browse-link\"], [1, \"list-wrapper-list\"], [\"class\", \"list-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-item\"], [1, \"image-wrapper\"], [1, \"image\", 3, \"src\"], [1, \"file-info\"], [1, \"close-button\"]],\n  template: function NgFileUploaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r8 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"change\", function NgFileUploaderComponent_Template_input_change_1_listener($event) {\n        return ctx.readURL($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function NgFileUploaderComponent_Template_button_click_3_listener() {\n        i0.ɵɵrestoreView(_r8);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(_r0.click());\n      });\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵtemplate(5, NgFileUploaderComponent_span_5_Template, 2, 1, \"span\", 5);\n      i0.ɵɵtemplate(6, NgFileUploaderComponent_span_6_Template, 3, 1, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 6);\n      i0.ɵɵtext(8, \" Supports \");\n      i0.ɵɵtemplate(9, NgFileUploaderComponent_ng_container_9_Template, 2, 1, \"ng-container\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(10, NgFileUploaderComponent_ul_10_Template, 2, 1, \"ul\", 8);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"multiple\", ctx.isMultiple);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.buttonLabel.length);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.browseLabel.length);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.supportingFormats);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showThumbnails);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"[_nghost-%COMP%] {\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n.button-wrapper[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.upload-button[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  border-radius: 8px;\\n  padding: 10px;\\n  border: 1px dashed #e0e0e0;\\n  width: 100%;\\n}\\n\\n.upload-button[_ngcontent-%COMP%]:hover {\\n  border-color: #636262;\\n  cursor: pointer;\\n  background-color: #f4f4f4;\\n}\\n\\n.upload-label[_ngcontent-%COMP%] {\\n  color: #000000;\\n  font-weight: bold;\\n  padding: 5px 0;\\n}\\n\\n.support-files-text[_ngcontent-%COMP%] {\\n  color: #a5a2a2;\\n  font-size: 10px;\\n}\\n\\n.browse-link[_ngcontent-%COMP%] {\\n  color: rgb(0, 153, 255);\\n}\\n\\n\\n.list-wrapper-list[_ngcontent-%COMP%] {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.list-item[_ngcontent-%COMP%] {\\n  border-bottom: 1px solid #f0e9e9;\\n  padding: 10px;\\n  display: flex;\\n  width: 100%;\\n  align-items: center;\\n}\\n\\n.list-item[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%] {\\n  width: 40px;\\n}\\n\\n.image-wrapper[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border: 1px solid #e0e0e0;\\n  overflow: hidden;\\n  margin-right: 10px;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 12px;\\n}\\n\\n.image-wrapper[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n}\\n\\n.file-info[_ngcontent-%COMP%] {\\n  color: #404040;\\n  font-size: 13px;\\n  flex: 1;\\n}\\n\\n.close-button[_ngcontent-%COMP%] {\\n  padding: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3Byb2plY3RzL25nLWdpbC11cGxvYWRlci9zcmMvbGliL25nLWZpbGUtdXBsb2FkZXIuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi9teSUyMHdvcmtzL2ZpbGUlMjB1cGxvYWRlL3Byb2plY3RzL25nLWdpbC11cGxvYWRlci9zcmMvbGliL25nLWZpbGUtdXBsb2FkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5Q0FBQTtBQ0NGOztBREVBO0VBQ0ksbUJBQUE7QUNDSjs7QURLRTtFQUNFLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsMEJBQUE7RUFDQSxXQUFBO0FDRko7O0FES0U7RUFDRSxxQkFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtBQ0ZKOztBREtFO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQ0ZKOztBREtFO0VBQ0UsY0FBQTtFQUNBLGVBQUE7QUNGSjs7QURLRTtFQUNFLHVCQUFBO0FDRko7O0FES0UscUVBQUE7QUFFQTtFQUNFLFNBQUE7RUFDQSxVQUFBO0FDSEo7O0FETUU7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0FDSEo7O0FETUU7RUFDRSxXQUFBO0FDSEo7O0FETUU7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLHlDQUFBO0VBQ0EsZUFBQTtBQ0hKOztBRE1FO0VBQ0UsZUFBQTtBQ0hKOztBRE1FO0VBQ0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxPQUFBO0FDSEo7O0FETUU7RUFDRSxlQUFBO0FDSEoiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xufVxuXG4uYnV0dG9uLXdyYXBwZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgXG4gIC5pbnB1dC1maWVsZCB7XG4gIH1cbiAgXG4gIC51cGxvYWQtYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjZTBlMGUwO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAudXBsb2FkLWJ1dHRvbjpob3ZlciB7XG4gICAgYm9yZGVyLWNvbG9yOiAjNjM2MjYyO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuICB9XG4gIFxuICAudXBsb2FkLWxhYmVsIHtcbiAgICBjb2xvcjogIzAwMDAwMDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBwYWRkaW5nOiA1cHggMDtcbiAgfVxuICBcbiAgLnN1cHBvcnQtZmlsZXMtdGV4dCB7XG4gICAgY29sb3I6ICNhNWEyYTI7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICB9XG4gIFxuICAuYnJvd3NlLWxpbmsge1xuICAgIGNvbG9yOiByZ2IoMCwgMTUzLCAyNTUpO1xuICB9XG4gIFxuICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB1cGxvYWRlZCBsaXN0IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4gIFxuICAubGlzdC13cmFwcGVyLWxpc3Qge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG4gIFxuICAubGlzdC1pdGVtIHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2YwZTllOTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICBcbiAgLmxpc3QtaXRlbSAuaW1hZ2Uge1xuICAgIHdpZHRoOiA0MHB4O1xuICB9XG4gIFxuICAuaW1hZ2Utd3JhcHBlciB7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG4gIFxuICAuaW1hZ2Utd3JhcHBlciBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLmZpbGUtaW5mbyB7XG4gICAgY29sb3I6ICM0MDQwNDA7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGZsZXg6IDE7XG4gIH1cblxuICAuY2xvc2UtYnV0dG9uIHtcbiAgICBwYWRkaW5nOjAgMTBweDtcbiAgfVxuICAiLCI6aG9zdCB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xufVxuXG4uYnV0dG9uLXdyYXBwZXIge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4udXBsb2FkLWJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyOiAxcHggZGFzaGVkICNlMGUwZTA7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4udXBsb2FkLWJ1dHRvbjpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogIzYzNjI2MjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xufVxuXG4udXBsb2FkLWxhYmVsIHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBwYWRkaW5nOiA1cHggMDtcbn1cblxuLnN1cHBvcnQtZmlsZXMtdGV4dCB7XG4gIGNvbG9yOiAjYTVhMmEyO1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbi5icm93c2UtbGluayB7XG4gIGNvbG9yOiByZ2IoMCwgMTUzLCAyNTUpO1xufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSB1cGxvYWRlZCBsaXN0IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ubGlzdC13cmFwcGVyLWxpc3Qge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5saXN0LWl0ZW0ge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2YwZTllOTtcbiAgcGFkZGluZzogMTBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDEwMCU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5saXN0LWl0ZW0gLmltYWdlIHtcbiAgd2lkdGg6IDQwcHg7XG59XG5cbi5pbWFnZS13cmFwcGVyIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UwZTBlMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uaW1hZ2Utd3JhcHBlciBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi5maWxlLWluZm8ge1xuICBjb2xvcjogIzQwNDA0MDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmbGV4OiAxO1xufVxuXG4uY2xvc2UtYnV0dG9uIHtcbiAgcGFkZGluZzogMCAxMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","NgFileUploaderComponent","constructor","readURL","event","console","log","target","files","index","length","file","reader","FileReader","readAsDataURL","onload","_event","uploadedList","push","data","state","uploadedUrl","result","inProgress","progress","canRetry","canCancel","selectors","inputs","buttonLabel","browseLabel","supportingFormats","isMultiple","showThumbnails","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/rajeevravi/Documents/my works/file uploade/projects/ng-gil-uploader/src/lib/ng-file-uploader.component.html","/Users/rajeevravi/Documents/my works/file uploade/projects/ng-gil-uploader/src/lib/ng-file-uploader.component.ts"],"sourcesContent":["<div class=\"button-wrapper\">\n    <input type=\"file\" hidden #file accept=\"image/*\" [multiple]=\"isMultiple\" (change)=\"readURL($event)\" />\n    <button class=\"upload-button\" (click)=\"file.click()\">\n        <div class=\"upload-label\">\n            <span *ngIf=\"buttonLabel.length\">{{ buttonLabel }}</span>\n            <span *ngIf=\"browseLabel.length\"><a class=\"browse-link\">{{ browseLabel }}</a></span>\n        </div>\n\n        <!-- Supporting file types -->\n        <div class=\"support-files-text\">\n            Supports\n            <ng-container *ngFor=\"let type of supportingFormats\">\n                {{ type }},\n            </ng-container>\n        </div>\n    </button>\n</div>\n\n<!-- thumbanil and list view -->\n<ul class=\"list-wrapper-list\" *ngIf=\"showThumbnails\">\n    <li class=\"list-item\" *ngFor=\"let file of uploadedList\">\n        <div class=\"image-wrapper\">\n            <img src=\"{{ file.uploadedUrl }}\" class=\"image\" />\n        </div>\n        <div class=\"file-info\">\n            <div>{{ file.data.name }}</div>\n            <div>{{ file.data.size / 1024 }} KB</div>\n        </div>\n        <div class=\"close-button\">x</div>\n    </li>\n</ul>","import { Component, Input } from '@angular/core';\nimport { FileUploadModel } from './ng-file-uploader.interface';\n\n@Component({\n  selector: 'lib-ng-gil-uploader',\n  templateUrl: './ng-file-uploader.component.html',\n  styleUrls: ['./ng-file-uploader.component.scss']\n})\nexport class NgFileUploaderComponent {\n/**\n   * label to show in the button\n   */\n@Input() buttonLabel = 'Drop your image here, or ';\n\n/**\n * browse label\n */\n@Input() browseLabel = 'Browse';\n\n/**\n * supporting files\n */\n@Input() supportingFormats = ['JPG, JPEG', 'GIF', 'PDF'];\n\n/**\n * is multiple\n */\n@Input() isMultiple = true;\n\n/**\n * show thumbnails\n */\n@Input() showThumbnails = true;\n\n/**\n * uploaded list\n */\nuploadedList: Array<FileUploadModel> = [];\n\nimageUrl: string | any = '';\nimageName: string | any = '';\n\n/**\n * constructor to load all dependencies\n */\nconstructor() {\n\n}\n\n/**\n * rea file\n */\nreadURL(event: any) {\n\n  // const file = URL.createObjectURL(event.target.files[0]);\n  console.log(event.target.files)\n  for (let index = 0; index < event.target.files.length; index++) {\n    const file = event.target.files[index];\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (_event) => {\n      this.uploadedList.push({\n        data: file,\n        state: 'in',\n        uploadedUrl: reader.result,\n        inProgress: false,\n        progress: 0,\n        canRetry: false,\n        canCancel: true,\n      });\n    };\n\n    // if (event.target.files[0]) {\n    //   reader.readAsDataURL(event.target.files[0]);\n    //   reader.onload = (_event) => {\n    //     this.imageName = event.target.files[0].name;\n    //     console.log(event.target.files[0].size);\n    //     this.imageUrl = reader.result;\n    //   };\n    // }\n\n    // for (let index = 0; index < event.target.files.length; index++) {\n    //   const file = event.target.files[index];\n    //   this.uploadedList.push({\n    //     data: file,\n    //     state: 'in',\n    //     uploadedUrl: '',\n    //     inProgress: false,\n    //     progress: 0,\n    //     canRetry: false,\n    //     canCancel: true,\n    //   });\n    // }\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}